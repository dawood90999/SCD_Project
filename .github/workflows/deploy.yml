
name: Build and Deploy MERN App to Minikube

on:
  push:
    branches:
      - testing
      - master

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Minikube
        shell: pwsh
        run: |
          minikube start
          minikube status

      - name: Start Minikube Tunnel
        shell: pwsh
        run: |
          Write-Output "Starting minikube tunnel in the background..."
          Start-Process -FilePath "minikube" -ArgumentList "tunnel" -NoNewWindow -RedirectStandardOutput "tunnel.log" -RedirectStandardError "tunnel.err"
          Start-Sleep -Seconds 10  # Wait for tunnel to initialize
          Get-Content tunnel.log  # Display tunnel output for debugging

      - name: Set up Docker to use Minikube's environment
        shell: pwsh
        run: |
          Write-Output "Configuring Docker to use Minikube's daemon..."
          minikube -p minikube docker-env --shell powershell | Invoke-Expression

      - name: Build Frontend Docker image
        shell: pwsh
        run: |
          cd frontend
          docker build -t dawoodhussain/mern-frontend:latest .

      - name: Build Backend Docker image
        shell: pwsh
        run: |
          cd backend
          docker build -t dawoodhussain/mern-backend:latest .

      - name: Login to Docker Hub
        shell: pwsh
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$env:DOCKER_PASSWORD" | docker login -u "$env:DOCKER_USERNAME" --password-stdin

      - name: Push Frontend image to Docker Hub
        shell: pwsh
        run: docker push dawoodhussain/mern-frontend:latest

      - name: Push Backend image to Docker Hub
        shell: pwsh
        run: docker push dawoodhussain/mern-backend:latest

      - name: Deploy to Minikube
        shell: pwsh
        run: |
          kubectl create namespace mern-app --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f k8s/mongodb.yaml
          kubectl apply -f k8s/backend.yaml
          kubectl apply -f k8s/frontend.yaml
          kubectl rollout status deployment/mongodb -n mern-app
          kubectl rollout status deployment/backend -n mern-app
          kubectl rollout status deployment/frontend -n mern-app

      - name: Verify deployment
        shell: pwsh
        run: |
          kubectl get pods -n mern-app
          kubectl get svc -n mern-app

     

      - name: Cleanup Minikube Tunnel
        shell: pwsh
        if: always()
        run: |
          Write-Output "Stopping minikube tunnel..."
          Stop-Process -Name "minikube" -Forceσει

